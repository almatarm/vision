package com.almatarm.vision;

import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.event.KeyEvent;
import java.util.Timer;
import java.util.TimerTask;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author almatarm
 */
public class Vision extends javax.swing.JFrame {
    Timer timer;
    CrossMover crossMover = new CrossMover(getSize().width, getSize().height);
    CircularMover circularMover = new CircularMover(getSize().width, getSize().height);
    
    /**
     * Creates new form Vision
     */
    public Vision() {
        setUndecorated(true);
        initComponents();
        
        GraphicsDevice gd =
                GraphicsEnvironment.getLocalGraphicsEnvironment().getDefaultScreenDevice();

        if (gd.isFullScreenSupported()) {
            gd.setFullScreenWindow(this);
        }
        timer = new Timer();
        timer.schedule(new MoverTimer(), 2000, 20);
         
        ((Board) board).add(crossMover);
        ((Board) board).add(circularMover);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        board = new Board();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        board.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                boardKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                boardKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout boardLayout = new javax.swing.GroupLayout(board);
        board.setLayout(boardLayout);
        boardLayout.setHorizontalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        boardLayout.setVerticalGroup(
            boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        getContentPane().add(board, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        crossMover.setSize(getSize().width, getSize().height);
        circularMover.setSize(getSize().width, getSize().height);
        
    }//GEN-LAST:event_formComponentResized

    private void boardKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boardKeyTyped
        //        System.out.println(evt.getKeyChar() + "\t" + evt.getKeyCode());
        System.out.println(String.format("R %s\t%s\t%s\t%s\t", evt.getKeyChar(),
                evt.getKeyCode(), evt.getKeyLocation(), evt.getExtendedKeyCode()));
        
    }//GEN-LAST:event_boardKeyTyped

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        System.out.println(String.format("%s\t%s\t%s\t%s\t", evt.getKeyChar(),
                evt.getKeyCode(), evt.getKeyLocation(), evt.getExtendedKeyCode()));
        
        if (evt.getKeyChar() == 'e' || evt.getKeyChar() == 'E') {
            System.exit(0);
        }
        
        if (evt.getKeyChar() == 'a' || evt.getKeyChar() == 'A') {
            System.exit(0);
        }
        
        if (evt.getKeyChar() == 'd' || evt.getKeyChar() == 'D') {
            ((Board) board).nextMover();
        }
    }//GEN-LAST:event_formKeyTyped

    private void boardKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_boardKeyReleased
        System.out.println(String.format("R2 %s\t%s\t%s\t%s\t", evt.getKeyChar(),
                evt.getKeyCode(), evt.getKeyLocation(), evt.getExtendedKeyCode()));
        
    }//GEN-LAST:event_boardKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vision.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vision.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vision.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vision.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Vision vision = new Vision();
                vision.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel board;
    // End of variables declaration//GEN-END:variables

    
    class MoverTimer extends TimerTask {
        int t;
        @Override
        public void run() {
            ((Board) board).tick(t++);
        }        
    }
}
